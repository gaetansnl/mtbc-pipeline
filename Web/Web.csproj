<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <Protobuf Include="Protos\*.proto" GrpcServices="Server" ProtoRoot="Protos" />
        <Protobuf Update="Protos\result.proto">
          <Access>Public</Access>
          <ProtoCompile>True</ProtoCompile>
          <CompileOutputs>True</CompileOutputs>
          <OutputDir>obj\Debug\net5.0\</OutputDir>
          <Generator>MSBuild:Compile</Generator>
        </Protobuf>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="10.1.1" />
        <PackageReference Include="Grpc.AspNetCore" Version="2.32.0" />
        <PackageReference Include="Grpc.AspNetCore.Web" Version="2.35.0-pre1" />
        <PackageReference Include="LiteDB" Version="5.0.10" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.2" />
    </ItemGroup>
    
    <ItemGroup>
        <Content Include="data\**">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <_ContentIncludedByDefault Remove="ClientApp\package-lock.json" />
        <_ContentIncludedByDefault Remove="ClientApp\package.json" />
        <_ContentIncludedByDefault Remove="ClientApp\public\manifest.json" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\state\grpc" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Core\Core.csproj" />
      <ProjectReference Include="..\Indexer\Indexer.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
