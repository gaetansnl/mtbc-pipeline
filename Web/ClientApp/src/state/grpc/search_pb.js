// source: search.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.AccessionCondition', null, global);
goog.exportSymbol('proto.api.BiosampleCondition', null, global);
goog.exportSymbol('proto.api.BoolOperator', null, global);
goog.exportSymbol('proto.api.BoolStrainCondition', null, global);
goog.exportSymbol('proto.api.CountryCondition', null, global);
goog.exportSymbol('proto.api.DateCondition', null, global);
goog.exportSymbol('proto.api.GeneStrainCondition', null, global);
goog.exportSymbol('proto.api.LineageStrainCondition', null, global);
goog.exportSymbol('proto.api.StrainCondition', null, global);
goog.exportSymbol('proto.api.StrainCondition.ConditionCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.BoolStrainCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.BoolStrainCondition.repeatedFields_, null);
};
goog.inherits(proto.api.BoolStrainCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.BoolStrainCondition.displayName = 'proto.api.BoolStrainCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.StrainCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.StrainCondition.oneofGroups_);
};
goog.inherits(proto.api.StrainCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.StrainCondition.displayName = 'proto.api.StrainCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DateCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DateCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DateCondition.displayName = 'proto.api.DateCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CountryCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.CountryCondition.repeatedFields_, null);
};
goog.inherits(proto.api.CountryCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.CountryCondition.displayName = 'proto.api.CountryCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AccessionCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.AccessionCondition.repeatedFields_, null);
};
goog.inherits(proto.api.AccessionCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.AccessionCondition.displayName = 'proto.api.AccessionCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.BiosampleCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.BiosampleCondition.repeatedFields_, null);
};
goog.inherits(proto.api.BiosampleCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.BiosampleCondition.displayName = 'proto.api.BiosampleCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GeneStrainCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GeneStrainCondition.repeatedFields_, null);
};
goog.inherits(proto.api.GeneStrainCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GeneStrainCondition.displayName = 'proto.api.GeneStrainCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.LineageStrainCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.LineageStrainCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.LineageStrainCondition.displayName = 'proto.api.LineageStrainCondition';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.BoolStrainCondition.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.BoolStrainCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.BoolStrainCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.BoolStrainCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BoolStrainCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.api.StrainCondition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.BoolStrainCondition}
 */
proto.api.BoolStrainCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.BoolStrainCondition;
  return proto.api.BoolStrainCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.BoolStrainCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.BoolStrainCondition}
 */
proto.api.BoolStrainCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.BoolOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 3:
      var value = new proto.api.StrainCondition;
      reader.readMessage(value,proto.api.StrainCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.BoolStrainCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.BoolStrainCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.BoolStrainCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BoolStrainCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api.StrainCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoolOperator operator = 1;
 * @return {!proto.api.BoolOperator}
 */
proto.api.BoolStrainCondition.prototype.getOperator = function() {
  return /** @type {!proto.api.BoolOperator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.BoolOperator} value
 * @return {!proto.api.BoolStrainCondition} returns this
 */
proto.api.BoolStrainCondition.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated StrainCondition conditions = 3;
 * @return {!Array<!proto.api.StrainCondition>}
 */
proto.api.BoolStrainCondition.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.api.StrainCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.StrainCondition, 3));
};


/**
 * @param {!Array<!proto.api.StrainCondition>} value
 * @return {!proto.api.BoolStrainCondition} returns this
*/
proto.api.BoolStrainCondition.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api.StrainCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.StrainCondition}
 */
proto.api.BoolStrainCondition.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api.StrainCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.BoolStrainCondition} returns this
 */
proto.api.BoolStrainCondition.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.StrainCondition.oneofGroups_ = [[2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.api.StrainCondition.ConditionCase = {
  CONDITION_NOT_SET: 0,
  ACCESSION: 2,
  BIOSAMPLE: 3,
  COUNTRY: 4,
  DATE: 5,
  GENE: 6,
  LINEAGE: 7,
  BOOL: 8
};

/**
 * @return {proto.api.StrainCondition.ConditionCase}
 */
proto.api.StrainCondition.prototype.getConditionCase = function() {
  return /** @type {proto.api.StrainCondition.ConditionCase} */(jspb.Message.computeOneofCase(this, proto.api.StrainCondition.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.StrainCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.StrainCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.StrainCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.StrainCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    negate: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    accession: (f = msg.getAccession()) && proto.api.AccessionCondition.toObject(includeInstance, f),
    biosample: (f = msg.getBiosample()) && proto.api.BiosampleCondition.toObject(includeInstance, f),
    country: (f = msg.getCountry()) && proto.api.CountryCondition.toObject(includeInstance, f),
    date: (f = msg.getDate()) && proto.api.DateCondition.toObject(includeInstance, f),
    gene: (f = msg.getGene()) && proto.api.GeneStrainCondition.toObject(includeInstance, f),
    lineage: (f = msg.getLineage()) && proto.api.LineageStrainCondition.toObject(includeInstance, f),
    bool: (f = msg.getBool()) && proto.api.BoolStrainCondition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.StrainCondition}
 */
proto.api.StrainCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.StrainCondition;
  return proto.api.StrainCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.StrainCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.StrainCondition}
 */
proto.api.StrainCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNegate(value);
      break;
    case 2:
      var value = new proto.api.AccessionCondition;
      reader.readMessage(value,proto.api.AccessionCondition.deserializeBinaryFromReader);
      msg.setAccession(value);
      break;
    case 3:
      var value = new proto.api.BiosampleCondition;
      reader.readMessage(value,proto.api.BiosampleCondition.deserializeBinaryFromReader);
      msg.setBiosample(value);
      break;
    case 4:
      var value = new proto.api.CountryCondition;
      reader.readMessage(value,proto.api.CountryCondition.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    case 5:
      var value = new proto.api.DateCondition;
      reader.readMessage(value,proto.api.DateCondition.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 6:
      var value = new proto.api.GeneStrainCondition;
      reader.readMessage(value,proto.api.GeneStrainCondition.deserializeBinaryFromReader);
      msg.setGene(value);
      break;
    case 7:
      var value = new proto.api.LineageStrainCondition;
      reader.readMessage(value,proto.api.LineageStrainCondition.deserializeBinaryFromReader);
      msg.setLineage(value);
      break;
    case 8:
      var value = new proto.api.BoolStrainCondition;
      reader.readMessage(value,proto.api.BoolStrainCondition.deserializeBinaryFromReader);
      msg.setBool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.StrainCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.StrainCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.StrainCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.StrainCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNegate();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAccession();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.AccessionCondition.serializeBinaryToWriter
    );
  }
  f = message.getBiosample();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.BiosampleCondition.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.CountryCondition.serializeBinaryToWriter
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.DateCondition.serializeBinaryToWriter
    );
  }
  f = message.getGene();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.GeneStrainCondition.serializeBinaryToWriter
    );
  }
  f = message.getLineage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.LineageStrainCondition.serializeBinaryToWriter
    );
  }
  f = message.getBool();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api.BoolStrainCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool negate = 1;
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.getNegate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.setNegate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional AccessionCondition accession = 2;
 * @return {?proto.api.AccessionCondition}
 */
proto.api.StrainCondition.prototype.getAccession = function() {
  return /** @type{?proto.api.AccessionCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.AccessionCondition, 2));
};


/**
 * @param {?proto.api.AccessionCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setAccession = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearAccession = function() {
  return this.setAccession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasAccession = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BiosampleCondition biosample = 3;
 * @return {?proto.api.BiosampleCondition}
 */
proto.api.StrainCondition.prototype.getBiosample = function() {
  return /** @type{?proto.api.BiosampleCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.BiosampleCondition, 3));
};


/**
 * @param {?proto.api.BiosampleCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setBiosample = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearBiosample = function() {
  return this.setBiosample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasBiosample = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CountryCondition country = 4;
 * @return {?proto.api.CountryCondition}
 */
proto.api.StrainCondition.prototype.getCountry = function() {
  return /** @type{?proto.api.CountryCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.CountryCondition, 4));
};


/**
 * @param {?proto.api.CountryCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setCountry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearCountry = function() {
  return this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DateCondition date = 5;
 * @return {?proto.api.DateCondition}
 */
proto.api.StrainCondition.prototype.getDate = function() {
  return /** @type{?proto.api.DateCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.DateCondition, 5));
};


/**
 * @param {?proto.api.DateCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setDate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GeneStrainCondition gene = 6;
 * @return {?proto.api.GeneStrainCondition}
 */
proto.api.StrainCondition.prototype.getGene = function() {
  return /** @type{?proto.api.GeneStrainCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.GeneStrainCondition, 6));
};


/**
 * @param {?proto.api.GeneStrainCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setGene = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearGene = function() {
  return this.setGene(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasGene = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional LineageStrainCondition lineage = 7;
 * @return {?proto.api.LineageStrainCondition}
 */
proto.api.StrainCondition.prototype.getLineage = function() {
  return /** @type{?proto.api.LineageStrainCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.LineageStrainCondition, 7));
};


/**
 * @param {?proto.api.LineageStrainCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setLineage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearLineage = function() {
  return this.setLineage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasLineage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BoolStrainCondition bool = 8;
 * @return {?proto.api.BoolStrainCondition}
 */
proto.api.StrainCondition.prototype.getBool = function() {
  return /** @type{?proto.api.BoolStrainCondition} */ (
    jspb.Message.getWrapperField(this, proto.api.BoolStrainCondition, 8));
};


/**
 * @param {?proto.api.BoolStrainCondition|undefined} value
 * @return {!proto.api.StrainCondition} returns this
*/
proto.api.StrainCondition.prototype.setBool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api.StrainCondition.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.StrainCondition} returns this
 */
proto.api.StrainCondition.prototype.clearBool = function() {
  return this.setBool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.StrainCondition.prototype.hasBool = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DateCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DateCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DateCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DateCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DateCondition}
 */
proto.api.DateCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DateCondition;
  return proto.api.DateCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DateCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DateCondition}
 */
proto.api.DateCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DateCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DateCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DateCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DateCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp from = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.DateCondition.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.DateCondition} returns this
*/
proto.api.DateCondition.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DateCondition} returns this
 */
proto.api.DateCondition.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DateCondition.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp to = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.DateCondition.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.DateCondition} returns this
*/
proto.api.DateCondition.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DateCondition} returns this
 */
proto.api.DateCondition.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DateCondition.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.CountryCondition.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CountryCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CountryCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CountryCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.CountryCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    isoCodeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CountryCondition}
 */
proto.api.CountryCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CountryCondition;
  return proto.api.CountryCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CountryCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CountryCondition}
 */
proto.api.CountryCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIsoCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CountryCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.CountryCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.CountryCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.CountryCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsoCodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string iso_code = 1;
 * @return {!Array<string>}
 */
proto.api.CountryCondition.prototype.getIsoCodeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.CountryCondition} returns this
 */
proto.api.CountryCondition.prototype.setIsoCodeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.CountryCondition} returns this
 */
proto.api.CountryCondition.prototype.addIsoCode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.CountryCondition} returns this
 */
proto.api.CountryCondition.prototype.clearIsoCodeList = function() {
  return this.setIsoCodeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.AccessionCondition.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AccessionCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AccessionCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AccessionCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AccessionCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessionNumberList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AccessionCondition}
 */
proto.api.AccessionCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AccessionCondition;
  return proto.api.AccessionCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AccessionCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AccessionCondition}
 */
proto.api.AccessionCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccessionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AccessionCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.AccessionCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.AccessionCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AccessionCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessionNumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accession_number = 1;
 * @return {!Array<string>}
 */
proto.api.AccessionCondition.prototype.getAccessionNumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.AccessionCondition} returns this
 */
proto.api.AccessionCondition.prototype.setAccessionNumberList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.AccessionCondition} returns this
 */
proto.api.AccessionCondition.prototype.addAccessionNumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.AccessionCondition} returns this
 */
proto.api.AccessionCondition.prototype.clearAccessionNumberList = function() {
  return this.setAccessionNumberList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.BiosampleCondition.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.BiosampleCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.BiosampleCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.BiosampleCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BiosampleCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessionNumberList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.BiosampleCondition}
 */
proto.api.BiosampleCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.BiosampleCondition;
  return proto.api.BiosampleCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.BiosampleCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.BiosampleCondition}
 */
proto.api.BiosampleCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccessionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.BiosampleCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.BiosampleCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.BiosampleCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BiosampleCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessionNumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accession_number = 1;
 * @return {!Array<string>}
 */
proto.api.BiosampleCondition.prototype.getAccessionNumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.BiosampleCondition} returns this
 */
proto.api.BiosampleCondition.prototype.setAccessionNumberList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.BiosampleCondition} returns this
 */
proto.api.BiosampleCondition.prototype.addAccessionNumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.BiosampleCondition} returns this
 */
proto.api.BiosampleCondition.prototype.clearAccessionNumberList = function() {
  return this.setAccessionNumberList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GeneStrainCondition.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GeneStrainCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GeneStrainCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GeneStrainCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GeneStrainCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessionNumberList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GeneStrainCondition}
 */
proto.api.GeneStrainCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GeneStrainCondition;
  return proto.api.GeneStrainCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GeneStrainCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GeneStrainCondition}
 */
proto.api.GeneStrainCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccessionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GeneStrainCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GeneStrainCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GeneStrainCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GeneStrainCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessionNumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accession_number = 1;
 * @return {!Array<string>}
 */
proto.api.GeneStrainCondition.prototype.getAccessionNumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.GeneStrainCondition} returns this
 */
proto.api.GeneStrainCondition.prototype.setAccessionNumberList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.GeneStrainCondition} returns this
 */
proto.api.GeneStrainCondition.prototype.addAccessionNumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GeneStrainCondition} returns this
 */
proto.api.GeneStrainCondition.prototype.clearAccessionNumberList = function() {
  return this.setAccessionNumberList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.LineageStrainCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.api.LineageStrainCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.LineageStrainCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.LineageStrainCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    classificationname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.LineageStrainCondition}
 */
proto.api.LineageStrainCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.LineageStrainCondition;
  return proto.api.LineageStrainCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.LineageStrainCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.LineageStrainCondition}
 */
proto.api.LineageStrainCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassificationname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.LineageStrainCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.LineageStrainCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.LineageStrainCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.LineageStrainCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassificationname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string classificationName = 1;
 * @return {string}
 */
proto.api.LineageStrainCondition.prototype.getClassificationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.LineageStrainCondition} returns this
 */
proto.api.LineageStrainCondition.prototype.setClassificationname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.LineageStrainCondition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.LineageStrainCondition} returns this
 */
proto.api.LineageStrainCondition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.api.BoolOperator = {
  OR: 0,
  AND: 1
};

goog.object.extend(exports, proto.api);
